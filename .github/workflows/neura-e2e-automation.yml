name: Neura E2E Automation

on:
  # ── every 15 minutes ──
  schedule:
    - cron: '*/15 * * * *'
  # ── on any push ──
  push:
    branches: ['main']
  # ── on any PR ──
  pull_request:
    branches: ['main']
  # ── manual trigger with inputs ──
  workflow_dispatch:
    inputs:
      spec_file:
        description: 'Path to one spec file (e.g. tests/bridge-ui.spec.js)'
        required: false
        default: ''
      test_pattern:
        description: 'Playwright --grep pattern (test title regex)'
        required: false
        default: ''

jobs:
  e2e:
    name: Neura E2E Automation tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # cancel the previous hourly run if a new one starts
    concurrency:
      group: e2e-${{ github.ref }}-${{ github.event_name == 'schedule' && 'cron' || 'ci' }}
      cancel-in-progress: true

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies (Chromium only)
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Run Playwright tests
        shell: bash
        run: |
          run_tests() {
            if [[ "${{ github.event_name }}" != "workflow_dispatch" ]]; then
              echo "🔄 Triggered by ${{ github.event_name }}: running bridge-flows.spec.js"
              npx playwright test tests/bridge-flows.spec.js
            else
              if [[ -n "${{ github.event.inputs.spec_file }}" && -n "${{ github.event.inputs.test_pattern }}" ]]; then
                echo "🎯 Running ${{
                    github.event.inputs.spec_file }} --grep '${{
                    github.event.inputs.test_pattern }}'"
                npx playwright test "${{ github.event.inputs.spec_file }}" --grep "${{ github.event.inputs.test_pattern }}"
              elif [[ -n "${{ github.event.inputs.spec_file }}" ]]; then
                echo "🎯 Running single spec: ${{ github.event.inputs.spec_file }}"
                npx playwright test "${{ github.event.inputs.spec_file }}"
              elif [[ -n "${{ github.event.inputs.test_pattern }}" ]]; then
                echo "🎯 Running grep: --grep '${{ github.event.inputs.test_pattern }}'"
                npx playwright test --grep "${{ github.event.inputs.test_pattern }}"
              else
                echo "🎯 No inputs — running full suite"
                npx playwright test
              fi
            fi
          }

          # First attempt
          run_tests
          rc=$?

          if [ $rc -ne 0 ]; then
            echo "⚠️  Tests failed with exit code $rc — retrying once..."
            run_tests
            rc2=$?
            if [ $rc2 -ne 0 ]; then
              echo "❌ Retry also failed with exit code $rc2"
              exit $rc2
            else
              echo "✅ Retry passed"
              exit 0
            fi
          fi

          echo "✅ Automation run passed successfully in first run"
        env:
          # ─────────────── secrets ───────────────
          SEED_PHRASE: ${{ secrets.SEED_PHRASE }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          WALLET_PASSWORD: ${{ secrets.WALLET_PASSWORD }}
          MY_ADDRESS: ${{ secrets.MY_ADDRESS }}
          # ─────────────── public variables ───────────────
          SEPOLIA_RPC_URL:              ${{ vars.SEPOLIA_RPC_URL }}
          NEURA_TESTNET_RPC_URL:        ${{ vars.NEURA_TESTNET_RPC_URL }}
          SEPOLIA_BRIDGE_PROXY_ADDRESS: ${{ vars.SEPOLIA_BRIDGE_PROXY_ADDRESS }}
          NEURA_BRIDGE_PROXY_ADDRESS:   ${{ vars.NEURA_BRIDGE_PROXY_ADDRESS }}
          ANKR_TOKEN_ADDRESS:           ${{ vars.ANKR_TOKEN_ADDRESS }}
          NEURA_TESTNET_URL:            ${{ vars.NEURA_TESTNET_URL }}
          SUBGRAPH_URL:                 ${{ vars.SUBGRAPH_URL }}
          HEADLESS: ${{ vars.HEADLESS }}
          BROWSER_CHANNEL: ${{ vars.BROWSER_CHANNEL }}
      # ────────────────────────── artifacts / traces ────────────────────────────
      - name: Upload Playwright report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 14

      - name: Upload traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: test-results/**/trace.zip
          retention-days: 14
